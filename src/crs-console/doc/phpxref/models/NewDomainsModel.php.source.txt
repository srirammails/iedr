<?php

/**
 * Short description for file
 * 
 * Long description (if any) ...
 * 
 * PHP version 5
 * 
 * New Registration Console (C) IEDR 2011
 * 
 * @category  NRC
 * @package   IEDR_New_Registrars_Console
 * @author    IEDR <asd@iedr.ie>
 * @copyright 2011 IEDR
 * @license   http://www.iedr.ie/ (C) IEDR 2011
 * @version   CVS: $Id:$
 * @link      https://statistics.iedr.ie/
 * @see       References to other sections (if any)...
 */


/**
 * Short description for class
 * 
 * Long description (if any) ...
 * 
 * @category  NRC
 * @package   IEDR_New_Registrars_Console
 * @author    IEDR <asd@iedr.ie>
 * @copyright 2011 IEDR
 * @license   http://www.iedr.ie/ (C) IEDR 2011
 * @version   Release: @package_version@
 * @link      https://statistics.iedr.ie/
 * @see       References to other sections (if any)...
 */
class NewDomainsModel
	extends AllDomainsModel {

	// "AAE553-IEDR have registered 2168 domains over the last 150 days or 14.45 per day."


    /**
     * Description for var
     * @var    number
     * @access public
     */
	var $days;

    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @param  integer $days Parameter description (if any) ...
     * @return void   
     * @access public 
     */
	public function __construct($days=30)
		{
		$this->days = $days;
		}

    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return object Return description (if any) ...
     * @access public
     */
	public function getSearchBase()
		{
		// override to set the filter
		$criteria = parent::getSearchBase();
		$criteria->registrationFrom = date('Y-m-d',time()-(86400*$this->days));
		$criteria->registrationTo   = date('Y-m-d',time()+86400);

		return $criteria;
		}

    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return mixed  Return description (if any) ...
     * @access public
     */
	public function rules()
		{
		return array(
			array('days', 'required'),
			array('days', 'length', 'min'=>1, 'max'=>4),
			array('days', 'numerical', 'min'=>1, 'max'=>9999, 'integerOnly'=>true),
			);
		}

    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return mixed  Return description (if any) ...
     * @access public
     */
	public function attributeLabels()
		{
		return array(
			'days' => 'Days',
			);
		}

	}

